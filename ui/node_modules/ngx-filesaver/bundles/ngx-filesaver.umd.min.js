!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("file-saver"),require("@angular/common/http")):"function"==typeof define&&define.amd?define("ngxFileSaver",["exports","@angular/core","file-saver","@angular/common/http"],t):t((e=e||self).ngxFileSaver={},e.ng.core,e.saveAs,e.ng.common.http)}(this,(function(e,t,r,n){"use strict";var s=function(){function e(){}return Object.defineProperty(e.prototype,"isFileSaverSupported",{get:function(){try{return!!new Blob}catch(e){return!1}},enumerable:!1,configurable:!0}),e.prototype.genType=function(e){if(!e||-1===e.lastIndexOf("."))return"text/plain";var t=e.substr(e.lastIndexOf(".")+1);switch(t){case"txt":return"text/plain";case"xml":case"html":return"text/"+t;case"json":return"octet/stream";default:return"application/"+t}},e.prototype.save=function(e,t,n,s){if(!e)throw new Error("Data argument should be a blob instance");var i=new Blob([e],{type:n||e.type||this.genType(t)});r.saveAs(i,decodeURI(t||"download"),s)},e.prototype.saveText=function(e,t,r){var n=new Blob([e]);this.save(n,t,null,r)},e}();s.ɵprov=t.ɵɵdefineInjectable({factory:function(){return new s},token:s,providedIn:"root"}),s.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}];var i=function(){function e(e,r,n){this.el=e,this.fss=r,this.httpClient=n,this.method="GET",this.success=new t.EventEmitter,this.error=new t.EventEmitter,r.isFileSaverSupported||e.nativeElement.classList.add("filesaver__not-support")}return e.prototype.getName=function(e){return decodeURI(this.fileName||e.headers.get("filename")||e.headers.get("x-filename"))},e.prototype._click=function(){var e=this;if(this.fss.isFileSaverSupported){var t=this.http;if(!t){var r=new n.HttpParams,s=this.query||{};for(var i in s)r.set(i,s[i]);t=this.httpClient.request(this.method,this.url,{observe:"response",responseType:"blob",headers:this.header,params:r})}this.setDisabled(!0),t.subscribe((function(t){200!==t.status||t.body.size<=0?e.error.emit(t):(e.fss.save(t.body,e.getName(t),null,e.fsOptions),e.success.emit(t))}),(function(t){return e.error.emit(t)}),(function(){return e.setDisabled(!1)}))}},e.prototype.setDisabled=function(e){var t=this.el.nativeElement;t.disabled=e,t.classList[e?"add":"remove"]("filesaver__disabled")},e}();i.decorators=[{type:t.Directive,args:[{selector:"[fileSaver]",exportAs:"fileSaver"}]}],i.ctorParameters=function(){return[{type:t.ElementRef},{type:s},{type:n.HttpClient}]},i.propDecorators={method:[{type:t.Input}],http:[{type:t.Input}],query:[{type:t.Input}],header:[{type:t.Input}],url:[{type:t.Input}],fileName:[{type:t.Input}],fsOptions:[{type:t.Input}],success:[{type:t.Output}],error:[{type:t.Output}],_click:[{type:t.HostListener,args:["click"]}]};var o=function(){};o.decorators=[{type:t.NgModule,args:[{declarations:[i],exports:[i]}]}],e.FileSaverDirective=i,e.FileSaverModule=o,e.FileSaverService=s,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=ngx-filesaver.umd.min.js.map